# Auto-generated by analyze-project-structure rule
# Generated at: 2024-10-13T22:55:00Z
# Project: albatrion

project:
  name: "albatrion"
  type: "monorepo"
  description: "A monorepo containing multiple UI framework plugins and utilities"

structure:
  root: "."
  packages_dir: "packages"
  source_dir: "src"
  tests_dir: "__tests__"
  docs_dir: "documents"
  tasks_dir: ".tasks"

package_manager:
  type: "yarn"
  workspace_command: "yarn workspace"

commands:
  dev:
    all: "yarn dev"

  test:
    all: "yarn test"
    schemaForm: "yarn workspace @canard/schema-form test"
    commonUtils: "yarn workspace @winglet/common-utils test"
    reactUtils: "yarn workspace @winglet/react-utils test"

  lint:
    all: "yarn lint"
    schemaForm: "yarn workspace @canard/schema-form lint"
    commonUtils: "yarn workspace @winglet/common-utils lint"

  build:
    all: "yarn build:all"

  typecheck:
    all: "yarn typecheck"
    schemaForm: "yarn workspace @canard/schema-form typecheck"

  custom:
    run_all: "yarn workspaces foreach --all --topological-dev run"
    publish_all: "yarn workspaces foreach --all --topological-dev --no-private run publish:npm"
    changeset: "changeset"
    changeset_version: "changeset version"
    changeset_publish: "yarn run:all && changeset publish"
    storybook_upgrade: "npx storybook@latest upgrade --yes"

tech_stack:
  frontend:
    framework: "react"
    language: "typescript"
    ui_library: "multiple"  # antd, antd-mobile, mui

  state_management:
    - "react-hooks"

  testing:
    unit: "vitest"
    e2e: "none"
    mocking: "none"

  build:
    bundler: "rollup"
    dev_server: "vite"

development:
  ports:
    frontend: 5173
    storybook: 6006

  env_files:
    - ".env"
    - ".env.local"

path_conventions:
  package_path: "packages/{scope}/{package-name}/"
  component_path: "packages/{scope}/{package-name}/src/components/{ComponentName}.tsx"
  test_path: "packages/{scope}/{package-name}/__tests__/{file-name}.test.ts"
  story_path: "packages/{scope}/{package-name}/stories/{ComponentName}.stories.tsx"

naming_conventions:
  components: "PascalCase"
  files: "PascalCase"
  directories: "kebab-case"
  variables: "camelCase"
  packages: "kebab-case"

# Package scopes and examples
scopes:
  aileron: "Benchmark and development tools"
  canard: "Schema form and UI plugins"
  lerx: "Promise-based utilities"
  winglet: "Common utilities and helpers"

examples:
  packages:
    - name: "schema-form"
      scope: "@canard"
      type: "library"
      path: "packages/canard/schema-form"
      description: "Core schema form library"

    - name: "schema-form-antd-plugin"
      scope: "@canard"
      type: "plugin"
      path: "packages/canard/schema-form-antd-plugin"
      description: "Ant Design plugin for schema-form"

    - name: "schema-form-antd-mobile-plugin"
      scope: "@canard"
      type: "plugin"
      path: "packages/canard/schema-form-antd-mobile-plugin"
      description: "Ant Design Mobile plugin for schema-form"

    - name: "schema-form-mui-plugin"
      scope: "@canard"
      type: "plugin"
      path: "packages/canard/schema-form-mui-plugin"
      description: "Material-UI plugin for schema-form"

    - name: "common-utils"
      scope: "@winglet"
      type: "library"
      path: "packages/winglet/common-utils"
      description: "Common utility functions"

    - name: "react-utils"
      scope: "@winglet"
      type: "library"
      path: "packages/winglet/react-utils"
      description: "React-specific utility hooks and components"

    - name: "promise-modal"
      scope: "@lerx"
      type: "library"
      path: "packages/lerx/promise-modal"
      description: "Promise-based modal utilities"

# Shortcuts for common packages
shortcuts:
  schemaForm: "yarn workspace @canard/schema-form"
  schemaFormAntd: "yarn workspace @canard/schema-form-antd-plugin"
  schemaFormAntdMobile: "yarn workspace @canard/schema-form-antd-mobile-plugin"
  schemaFormMui: "yarn workspace @canard/schema-form-mui-plugin"
  commonUtils: "yarn workspace @winglet/common-utils"
  reactUtils: "yarn workspace @winglet/react-utils"
  promiseModal: "yarn workspace @lerx/promise-modal"
  json: "yarn workspace @winglet/json"
  jsonSchema: "yarn workspace @winglet/json-schema"

# Project-specific notes
notes: |
  - This is a library monorepo, not an application
  - Each package is independently versioned and published
  - Uses changesets for version management
  - No backend/API components
  - Multiple UI framework support (Ant Design, Ant Design Mobile, Material-UI)
